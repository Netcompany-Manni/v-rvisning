{"ast":null,"code":"import _classCallCheck from \"/Users/manvep/Documents/reactTesting/react-testing-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/manvep/Documents/reactTesting/react-testing-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/manvep/Documents/reactTesting/react-testing-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/manvep/Documents/reactTesting/react-testing-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/manvep/Documents/reactTesting/react-testing-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/manvep/Documents/reactTesting/react-testing-project/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from './Header/Headercomponent.js';\nimport Body from './Body/Bodycomponent.js';\nimport WeatherList from './WeatherComponents/WeatherList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.updateStates = function (data) {\n      _this.setState({\n        location_type: data[0].location_type\n      });\n    };\n\n    _this.getDataFromAPI = function () {\n      fetch('https://www.metaweather.com/api/location/search/?query=oslo', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          personId: 1,\n          informationId: _this.props.terms.id,\n          versionNumber: _this.props.terms.versionNumber,\n          accepted: true\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        if (responseJson) {\n          _this.setState({\n            accepted: true,\n            clicked: true,\n            loading: false\n          });\n        }\n\n        return acceptedTermsFetchDataSuccess(responseJson);\n      }).catch(function (response) {\n        _this.setState({\n          accepted: false,\n          clicked: false,\n          loading: false\n        });\n\n        return response;\n      });\n    };\n\n    _this.state = {\n      location_type: \" Test\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFromAPI();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Header, {\n        tekst: this.state.location_type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(Body, {\n        tekst: \"Her kommer v\\xE6ret\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(WeatherList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/manvep/Documents/reactTesting/react-testing-project/src/App.js"],"names":["React","Component","Header","Body","WeatherList","App","updateStates","data","setState","location_type","getDataFromAPI","fetch","method","headers","body","JSON","stringify","personId","informationId","props","terms","id","versionNumber","accepted","then","response","json","responseJson","clicked","loading","acceptedTermsFetchDataSuccess","catch","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;IACMC,G;;;;;AAEN,iBAAa;AAAA;;AAAA;;AACX;;AADW,UAqBXC,YArBW,GAqBI,UAACC,IAAD,EAAU;AACvB,YAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQE;AADZ,OAAd;AAGA,KAzBS;;AAAA,UA2BXC,cA3BW,GA2BM,YAAM;AACrBC,MAAAA,KAAK,CAAC,6DAAD,EAAgE;AACnEC,QAAAA,MAAM,EAAE,MAD2D;AAEnEC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF0D;AAGnEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,QAAQ,EAAE,CADO;AAEjBC,UAAAA,aAAa,EAAE,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,EAFf;AAGjBC,UAAAA,aAAa,EAAE,MAAKH,KAAL,CAAWC,KAAX,CAAiBE,aAHf;AAIjBC,UAAAA,QAAQ,EAAE;AAJO,SAAf;AAH6D,OAAhE,CAAL,CASCC,IATD,CASM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OATd,EAUGF,IAVH,CAUQ,UAAAG,YAAY,EAAI;AAClB,YAAIA,YAAJ,EAAkB;AACd,gBAAKnB,QAAL,CAAc;AAACe,YAAAA,QAAQ,EAAE,IAAX;AAAiBK,YAAAA,OAAO,EAAE,IAA1B;AAAgCC,YAAAA,OAAO,EAAE;AAAzC,WAAd;AACH;;AACD,eAAOC,6BAA6B,CAACH,YAAD,CAApC;AACH,OAfH,EAgBGI,KAhBH,CAgBS,UAAAN,QAAQ,EAAI;AACf,cAAKjB,QAAL,CAAc;AAACe,UAAAA,QAAQ,EAAE,KAAX;AAAkBK,UAAAA,OAAO,EAAE,KAA3B;AAAkCC,UAAAA,OAAO,EAAE;AAA3C,SAAd;;AACA,eAAOJ,QAAP;AACH,OAnBH;AAoBD,KAhDU;;AAEX,UAAKO,KAAL,GAAa;AACXvB,MAAAA,aAAa,EAAG;AADL,KAAb;AAFW;AAKZ;;;;wCAEkB;AACjB,WAAKC,cAAL;AACD;;;6BAEU;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAKsB,KAAL,CAAWvB,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EArBeR,S;;AAyDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './Header/Headercomponent.js';\nimport Body from './Body/Bodycomponent.js';\nimport WeatherList from './WeatherComponents/WeatherList';\nclass App extends Component {\n\nconstructor(){\n  super();\n  this.state = {\n    location_type : \" Test\",\n  }\n}\n\ncomponentDidMount(){\n  this.getDataFromAPI();\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header tekst={this.state.location_type}/> \n        <Body tekst=\"Her kommer vÃ¦ret\"/>\n        <WeatherList/>\n      </div>\n    );\n  }\n\n  updateStates = (data) => {\n    this.setState({\n      location_type : data[0].location_type\n    });\n   }\n\n  getDataFromAPI = () => {\n    fetch('https://www.metaweather.com/api/location/search/?query=oslo', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n          personId: 1,\n          informationId: this.props.terms.id,\n          versionNumber: this.props.terms.versionNumber,\n          accepted: true\n      }),\n  }).then(response => response.json())\n      .then(responseJson => {\n          if (responseJson) {\n              this.setState({accepted: true, clicked: true, loading: false});\n          }\n          return acceptedTermsFetchDataSuccess(responseJson);\n      })\n      .catch(response => {\n          this.setState({accepted: false, clicked: false, loading: false});\n          return response;\n      });\n  }\n\n\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}